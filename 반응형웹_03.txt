[상대크기를 적용한 웹사이트 구현]
=> 자연휴양림 적용
1. 데스크탑PC 용
2. 태블릿PC 용
3. 스마트폰 용


작업폴더명 =>
D:\ResWeb\200107\extra\RWD\rwd_basic
html파일 =>
index.html


[작업내용1]
div#wrap => 800px
div#wrap>div#inner =>100%
상대크기의 적용결과
=> 모두 고정크기 적용됨
      (상대적인 크기 적용 안됨)

[작업내용2 ]
div#wrap => 80%
div#wrap>div#inner =>100%
상대크기의 적용결과
=> 뷰포트의 크기에 상대적인 폭으로
      적용되어 화면이 폭이 달라진다.

결론1. 부모요소가 절대크기라면
         하위요소가 상대크기라도
         전체적으로 상대크기가
         적용되지 않는다. 
         => div#wrap을
              상대크기로 적용해야만
              전체적으로 상대크기를
              적용할 수 있다.
결론2. 부모요소가 절대크기라면
         하위요소가 부모요소보다
         훨씬 작은 크기의 상대크기라도
         상대적으로 크기가 화면에
         따라서 조절되지 않는다.


--------------------------------------

[상대크기를 적용한 반응형 웹디자인]
1. 상대크기와 반응형 웹디자인은 별개다.
2. 반응형 웹디자인에서 상대크기를
    적용하는 경우는 많다.

[max-width, min-width에 대한 이해]
1. max-width: 화면의 폭을 넓게 만들었을 때
                     max-width가 적용된 해당 요소의
                     최대 폭을 설정하는 CSS속성
                     그러므로 최대크기까지만 적용되고
                     부모요소의 폭을 더 크게 만들더라도
                     해당 요소는 더이상 폭이 커지지 않는 속성
                     일반적으로 절대크기 적용
                     차이점. 절대크기를 적용하더라도
                               상대크기가 적용된다.
2. min-width: max-width의 반대 기능


[상대크기를 적용하는 방법]
1. div#wrap은 무조건 상대크기 적용
2. 자식 요소는 부모요소와 마찬가지로 상대크기를
    적용해야한다.
3. 자식 요소가 max-width 또는 min-width일 경우에는
    절대 크기가 적용되었다 하더라도 상대크기가 적용된다.
    (단, 부모요소가 상대크기이어야만 함)

참고1. div#wrap에 width속성을 사용하지 않으면
        자동으로 width: 100% 적용되므로
        하위 요소들은 상대크기를 적용할 수 있다.
참고2. height 속성을 생략하면
         width 속성의 크기에 따라 종횡비가 자동적용된다.
         (기본 종횡비를 유지한다는 말이 아님)
         그러므로 꼭 기재해야 하는 곳이 아니라면
         height 속성은 생략함.
       
       
---------------------------------------

[상대크기 레이아웃을 기획하는 방법(=설계)]
1. 절대크기 레이아웃부터 최종 결과물을 생성함.
2. 해당 대상의 수치계산을 통해
    상대크기를 적용하고
    전체적인 작업을 마무리하면 전체 레이아웃이
    상대크기가 적용된다.

[미디어 쿼리 적용]
A. 내림차순
  1. 데스크탑PC용 레이아웃 생성
  2. 모바일기기 레이아웃 생성
B. 오름차순
  1. 모바일기기 레이아웃 생성
  2. 데스크탑PC용 레이아웃 생성

[미디어 쿼리를 적용한 상대크기 레이아웃]
1. html 구조
<div id="wrap">
  <header>
     <div id="logo"></div>
     <nav id="gnb"></nav>
  </header>
  ...
</div>

2. 절대크기를 적용한 레이아웃 적용
<div id="wrap">  => w:1000px 
  <header>          => w:980px
     <div id="logo"></div> => w:240px
     <nav id="gnb"></nav> => w:700px
  </header>
  ...
</div>

3. 상대크기를 적용한 레이아웃 적용(수치계산 필요)
<div id="wrap">  => w:1000px 에 해당하는 상대크기 적용
                                적당한 상대크기를 임의 적용
                                 모니터 전체폭 : 1920 px
                                 네이버 전체목 : 1200 px
                                  (1200 / 1920) * 100
                                 1) width: 62.5%;
                                 2) 또는 width 를 기재하지 않음
                                     margin: 0 18.75%;
  <header>          => w:980px
     <div id="logo"></div> => w:240px
     <nav id="gnb"></nav> => w:700px
  </header>
  ...
</div>
  
       

4. 글자크기
 1) em 단위 => 기준크기인 16px로 나누었을 때의 값을
                      적용한다.
                      1em; => 해당 대상의 실제 px크기가
                                     16px이 된다.
                       보기. 해당 대상의 글씨 크기가 24px이라면
                         24/16 => 1.5em
                        em 단위라고 하는 이유는
                        영어대문자 M 의 기준 크기가 좌우 모두16px의
                        정사각형 모양에서 따왔기 때문.
 2) vw 단위 => 뷰포트 폭 단위(Viewport Width)
                      현재 화면의 뷰포트의 전체 폭을 100%로 지정한 후
                      이 기준으로 해당 대상의 크기를 지정하는 방식
                      보기. 현재 뷰포트가 1200px
                              해당 대상 텍스트의 단위가 1.2vw라면
                              해당 대상의 크기는 1200 px의 1.2%에 
                              해당함. 그러므로 해당 대상은 14.4px이 적용됨
      참고. em 단위 또는 vw 단위를 수치계산하여 적용하지 않고
             크기를 조절하면서 적당한 크기를 사용한다.


 3) 일반적으로 % 단위를 사용하지 않음
     글씨의 절대크기는 12px~30px 이므로
     %사용한 상대크기는 div#wrap이
     800px 이라고 하더라도
     글씨크기가 30px 이라면 수치상으로
     3.75%가 거의 최대치이므로
     %를 사용한 상대크기를 적용하지 않고
      em 또는 vw  단위를 사용한다.













